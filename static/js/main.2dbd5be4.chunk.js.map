{"version":3,"sources":["2048/2048.utils.js","2048/components/Tile.js","2048/GameBoard.js","App.js","index.js"],"names":["tileColors","0","2","4","8","16","32","64","128","256","512","1024","2048","addNewTile","board","times","arguments","length","undefined","newBoard","emptyTiles","reduce","acc","tile","index","push","i","Math","floor","random","shiftTiles","direction","col","column","shiftedColumn","shiftLine","setColumn","reversedColumn","reverse","row","start","line","slice","shiftedLine","setLine","reversedLine","mergeLine","mergedLine","mergedValue","nonNullTiles","filter","Array","fill","forEach","StyledTile","styled","div","_templateObject","_taggedTemplateLiteral","props","color","Tile","_ref","value","React","createElement","key","Grid","GameBoard","gameBoard","setBoard","useState","move","mergeTiles","mergedColumn","handleKeyDown","event","useEffect","window","addEventListener","removeEventListener","map","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2dbd5be4.chunk.js","sourcesContent":["export const tileColors = {\n  0: '#eee',\n  2: '#139000',\n  4: '#18b45f',\n  8: '#1cd7be',\n  16: '#ebc63f',\n  32: '#d5a360',\n  64: '#d9899d',\n  128: '#b661b0',\n  256: '#9238c2',\n  512: '#932a9e',\n  1024: '#941c79',\n  2048: '#960030',\n}\n\nexport const addNewTile = (board, times = 1) => {\n  const newBoard = [...board];\n\n  const emptyTiles = board.reduce((acc, tile, index) => {\n    if (tile === 0) {\n      acc.push(index);\n    }\n    return acc;\n  }, []);\n  \n  if (emptyTiles.length > 0) {\n    for(let i = 0; i < times; i++){\n      const randomIndex = emptyTiles[Math.floor(Math.random() * emptyTiles.length)];\n      newBoard[randomIndex] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  return newBoard; \n};\n\nexport const mergeTiles = (board, direction) => {\n  const newBoard = [...board];\n\n  switch (direction) {\n    case 'up':\n      for (let col = 0; col < 4; col++) {\n        const column = [newBoard[col], newBoard[col + 4], newBoard[col + 8], newBoard[col + 12]];\n        const mergedColumn = mergeLine(column);\n        setColumn(newBoard, col, mergedColumn);\n      }\n      break;\n\n    case 'down':\n      for (let col = 0; col < 4; col++) {\n        const column = [newBoard[col], newBoard[col + 4], newBoard[col + 8], newBoard[col + 12]];\n        const reversedColumn = column.reverse();\n        const mergedColumn = mergeLine(reversedColumn);\n        setColumn(newBoard, col, mergedColumn.reverse());\n      }\n      break;\n\n    case 'left':\n      for (let row = 0; row < 4; row++) {\n        const start = row * 4;\n        const line = newBoard.slice(start, start + 4);\n        const mergedLine = mergeLine(line);\n        setLine(newBoard, row, mergedLine);\n      }\n      break;\n\n    case 'right':\n      for (let row = 0; row < 4; row++) {\n        const start = row * 4;\n        const line = newBoard.slice(start, start + 4);\n        const reversedLine = line.reverse();\n        const mergedLine = mergeLine(reversedLine);\n        setLine(newBoard, row, mergedLine.reverse());\n      }\n      break;\n\n    default:\n      break;\n  }\n\n  return newBoard;\n};\n\nexport const shiftTiles = (board, direction) => {\n  const newBoard = [...board];\n\n  switch (direction) {\n    case 'up':\n      for (let col = 0; col < 4; col++) {\n        const column = [newBoard[col], newBoard[col + 4], newBoard[col + 8], newBoard[col + 12]];\n        const shiftedColumn = shiftLine(column);\n        setColumn(newBoard, col, shiftedColumn);\n      }\n      break;\n\n    case 'down':\n      for (let col = 0; col < 4; col++) {\n        const column = [newBoard[col], newBoard[col + 4], newBoard[col + 8], newBoard[col + 12]];\n        const reversedColumn = column.reverse();\n        const shiftedColumn = shiftLine(reversedColumn);\n        setColumn(newBoard, col, shiftedColumn.reverse());\n      }\n      break;\n\n    case 'left':\n      for (let row = 0; row < 4; row++) {\n        const start = row * 4;\n        const line = newBoard.slice(start, start + 4);\n        const shiftedLine = shiftLine(line);\n        setLine(newBoard, row, shiftedLine);\n      }\n      break;\n\n    case 'right':\n      for (let row = 0; row < 4; row++) {\n        const start = row * 4;\n        const line = newBoard.slice(start, start + 4);\n        const reversedLine = line.reverse();\n        const shiftedLine = shiftLine(reversedLine);\n        setLine(newBoard, row, shiftedLine.reverse());\n      }\n      break;\n\n    default:\n      break;\n  }\n  return newBoard;\n};\n\nconst mergeLine = (line) => {\n  const mergedLine = [];\n\n  for (let i = 0; i < line.length; i++) {\n    if (line[i] !== 0) {\n      let mergedValue = line[i];\n\n      while (i + 1 < line.length && mergedValue === line[i + 1]) {\n        mergedValue *= 2;\n        i++;\n      }\n\n      mergedLine.push(mergedValue);\n    }\n  }\n\n  while (mergedLine.length < 4) {\n    mergedLine.push(0);\n  }\n\n  return mergedLine;\n};\n\nconst shiftLine = (line) => {\n  const nonNullTiles = line.filter((tile) => tile !== 0);\n  const shiftedLine = Array(4).fill(0);\n\n  nonNullTiles.forEach((tile, index) => {\n    shiftedLine[index] = tile;\n  });\n\n  return shiftedLine;\n};\n\nconst setColumn = (board, col, column) => {\n  for (let i = 0; i < 4; i++) {\n    board[col + (i*4)] = column[i];\n  }\n};\n\nconst setLine = (board, row, line) => {\n  for (let i = 0; i < 4; i++) {\n    board[row * 4 + i] = line[i];\n  }\n};","import React from 'react';\nimport styled from 'styled-components';\nimport { tileColors } from '../2048.utils';\n\nconst StyledTile = styled.div`\n  width: 100px;\n  height: 100px;\n  background-color: ${(props) => props.color || '#777'};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 24px;\n  font-weight: bold;\n`;\n\nconst Tile = ({index, value}) => {\n  return (\n    <StyledTile key={index} color={tileColors[value]} >\n      {value}\n    </StyledTile>\n  );\n};\n\nexport default Tile;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { shiftTiles, mergeTiles, addNewTile } from './2048.utils';\nimport Tile from './components/Tile';\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 100px);\n  gap: 10px;\n  justify-content: center;\n`;\n\nconst GameBoard = () => {\n  const [gameBoard, setBoard] = useState(Array(16).fill(0));\n  \n  const move = (direction) => {\n    let newBoard = [...gameBoard];\n    newBoard = shiftTiles(newBoard, direction);\n    newBoard = mergeTiles(newBoard, direction);\n    newBoard = shiftTiles(newBoard, direction);\n    newBoard = addNewTile(newBoard)\n\n    setBoard(newBoard);\n  };\n\n  const handleKeyDown = (event) => {\n    const key = event.key;\n  \n    switch (key) {\n      case 'ArrowUp':\n        move('up');\n        break;\n      case 'ArrowDown':\n        move('down');\n        break;\n      case 'ArrowLeft':\n        move('left');\n        break;\n      case 'ArrowRight':\n        move('right');\n        break;\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    setBoard(addNewTile(gameBoard, 2));\n  }, []);\n  \n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n  \n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [gameBoard]);\n\n  return (\n    <Grid>\n      {gameBoard.map((value, index) => (\n        <Tile index={index} value={value} />\n      ))}\n    </Grid>\n  );\n};\n\nexport default GameBoard;","import React from 'react';\nimport GameBoard from './2048/GameBoard';\n\nconst App = () => {\n  return (\n    <div>\n      <h1>2048 Game</h1>\n      <GameBoard />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}